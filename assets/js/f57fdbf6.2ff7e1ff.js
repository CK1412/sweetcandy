"use strict";(self.webpackChunksweetcandy=self.webpackChunksweetcandy||[]).push([[2356],{7014:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var i=e(5893),o=e(1151);const r={sidebar_position:1,title:"Ki\u1ec3m tra k\u1ebft n\u1ed1i m\u1ea1ng"},s="Ki\u1ec3m tra k\u1ebft n\u1ed1i m\u1ea1ng",c={id:"flutter_dart/utils/useful/network_connectivity",title:"Ki\u1ec3m tra k\u1ebft n\u1ed1i m\u1ea1ng",description:"Class NetworkConnectivity gi\xfap ki\u1ec3m tra k\u1ebft n\u1ed1i m\u1ea1ng c\u1ee7a thi\u1ebft b\u1ecb.",source:"@site/docs/flutter_dart/utils/useful/network_connectivity.mdx",sourceDirName:"flutter_dart/utils/useful",slug:"/flutter_dart/utils/useful/network_connectivity",permalink:"/sweetcandy/docs/flutter_dart/utils/useful/network_connectivity",draft:!1,unlisted:!1,editUrl:"https://github.com/CK1412/sweetcandy/tree/main/docs/flutter_dart/utils/useful/network_connectivity.mdx",tags:[],version:"current",lastUpdatedBy:"canhth",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Ki\u1ec3m tra k\u1ebft n\u1ed1i m\u1ea1ng"},sidebar:"flutterDart",previous:{title:"Useful",permalink:"/sweetcandy/docs/category/useful"},next:{title:"Design Pattern",permalink:"/sweetcandy/docs/flutter_dart/design_pattern/"}},a={},l=[{value:"Code tri\u1ec3n khai",id:"code-tri\u1ec3n-khai",level:2},{value:"C\xe1ch s\u1eed d\u1ee5ng",id:"c\xe1ch-s\u1eed-d\u1ee5ng",level:2}];function u(n){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"ki\u1ec3m-tra-k\u1ebft-n\u1ed1i-m\u1ea1ng",children:"Ki\u1ec3m tra k\u1ebft n\u1ed1i m\u1ea1ng"}),"\n",(0,i.jsxs)(t.p,{children:["Class ",(0,i.jsx)(t.code,{children:"NetworkConnectivity"})," gi\xfap ki\u1ec3m tra k\u1ebft n\u1ed1i m\u1ea1ng c\u1ee7a thi\u1ebft b\u1ecb."]}),"\n",(0,i.jsx)(t.p,{children:"Packages s\u1eed d\u1ee5ng:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://pub.dev/packages/connectivity_plus",children:"connectivity_plus"}),": ^6.0.3"]}),"\n",(0,i.jsx)(t.li,{children:"logger"}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.a,{href:"https://pub.dev/packages/dartx",children:"dartx"}),": ^1.2.0"]}),"\n"]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"NetworkConnectivity"})," ch\u1ec9 ki\u1ec3m tra \u0111\u01b0\u1ee3c thi\u1ebft b\u1ecb \u0111\xe3 b\u1eadt k\u1ebft n\u1ed1i m\u1ea1ng hay ch\u01b0a, kh\xf4ng ki\u1ec3m tra \u0111\u01b0\u1ee3c t\xecnh tr\u1ea1ng m\u1ea1ng y\u1ebfu hay m\u1ea1nh."]})}),"\n",(0,i.jsx)(t.h2,{id:"code-tri\u1ec3n-khai",children:"Code tri\u1ec3n khai"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",metastring:'title="lib/utils/useful/network_connectivity.dart"',children:"// ignore_for_file: unreachable_from_main\n\nimport 'dart:async';\n\nimport 'package:connectivity_plus/connectivity_plus.dart';\nimport 'package:dartx/dartx.dart';\nimport 'package:flutter/material.dart';\nimport 'package:logger/logger.dart';\n\nimport 'shared/logger/logger.dart';\n\ntypedef ConnectionStatusNotifier = ValueNotifier<ConnectionStatus>;\n\nclass NetworkConnectivity {\n  NetworkConnectivity._();\n\n  static NetworkConnectivity? _instance;\n\n  factory NetworkConnectivity() {\n    return _instance ??= NetworkConnectivity._();\n  }\n\n  final Connectivity _connectivity = Connectivity();\n  late final StreamSubscription<List<ConnectivityResult>> _subscription;\n\n  late ConnectionStatusNotifier _networkStatus;\n\n  ConnectionStatus get networkStatus => _networkStatus.value;\n\n  ConnectionStatusNotifier get networkStatusNotifier => _networkStatus;\n\n  // Call when launch app\n  void init() {\n    _initConnectivity();\n  }\n\n  Future<void> _initConnectivity() async {\n    try {\n      _networkStatus = ValueNotifier(ConnectionStatus.offline);\n\n      _subscription =\n          _connectivity.onConnectivityChanged.listen(_updateConnectionStatus);\n\n      Logger().i('NetworkConnectivity init success');\n    } catch (e) {\n      Logger().e('NetworkConnectivity init failure', error: e);\n    }\n  }\n\n  void _updateConnectionStatus(List<ConnectivityResult> connectivityResult) {\n    // Update network status\n    if (connectivityResult.containsAny([\n      ConnectivityResult.mobile,\n      ConnectivityResult.wifi,\n      ConnectivityResult.ethernet,\n    ])) {\n      _networkStatus.value = ConnectionStatus.online;\n    } else {\n      _networkStatus.value = ConnectionStatus.offline;\n    }\n  }\n\n  void dispose() {\n    _subscription.cancel();\n    logger.i('NetworkConnectivity is disposed.');\n  }\n}\n\nenum ConnectionStatus {\n  online,\n  offline,\n}\n\nextension ConnectionStatusEx on ConnectionStatus {\n  bool get isOnline => this == ConnectionStatus.online;\n\n  bool get isOffline => this == ConnectionStatus.offline;\n}\n"})}),"\n",(0,i.jsx)(t.h2,{id:"c\xe1ch-s\u1eed-d\u1ee5ng",children:"C\xe1ch s\u1eed d\u1ee5ng"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-dart",children:"/// Example\nif (NetworkConnectivity().networkStatus.isOnline) {\n  debugPrint('Network is connected');\n} else {\n  debugPrint('Network is disconnected');\n}\n"})})]})}function d(n={}){const{wrapper:t}={...(0,o.a)(),...n.components};return t?(0,i.jsx)(t,{...n,children:(0,i.jsx)(u,{...n})}):u(n)}},1151:(n,t,e)=>{e.d(t,{Z:()=>c,a:()=>s});var i=e(7294);const o={},r=i.createContext(o);function s(n){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function c(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:s(n.components),i.createElement(r.Provider,{value:t},n.children)}}}]);